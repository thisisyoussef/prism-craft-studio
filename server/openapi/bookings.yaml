tags:
  - name: Bookings
    description: Designer consultation bookings
paths:
  /api/bookings:
    post:
      tags: [Bookings]
      summary: Create a designer booking
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [designerId, consultationType, scheduledDate, durationMinutes, price]
              properties:
                designerId: { type: string }
                consultationType: { type: string }
                scheduledDate: { type: string, format: date-time }
                durationMinutes: { type: integer, minimum: 15 }
                status:
                  type: string
                  enum: [scheduled, confirmed, in_progress, completed, cancelled, rescheduled]
                price: { type: number }
                meetingLink: { type: string }
                notes: { type: string }
                projectFiles:
                  type: array
                  items: { type: string }
            example:
              designerId: des_1
              consultationType: logo_design
              scheduledDate: "2025-09-04T14:00:00.000Z"
              durationMinutes: 60
              price: 49
              notes: Please review brand colors
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema: { $ref: '#/components/schemas/DesignerBooking' }
              example:
                id: bkg_1
                designerId: des_1
                consultationType: logo_design
                scheduledDate: "2025-09-04T14:00:00.000Z"
                durationMinutes: 60
                status: scheduled
                price: 49
                notes: Please review brand colors
        '401': { description: Unauthorized, content: { application/json: { schema: { $ref: '#/components/schemas/Error' } } } }
    get:
      tags: [Bookings]
      summary: List bookings
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Bookings
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/DesignerBooking' }
              example:
                - id: bkg_1
                  designerId: des_1
                  consultationType: logo_design
                  scheduledDate: "2025-09-04T14:00:00.000Z"
                  durationMinutes: 60
                  status: scheduled
                  price: 49
        '401': { description: Unauthorized, content: { application/json: { schema: { $ref: '#/components/schemas/Error' } } } }
  /api/bookings/{id}:
    patch:
      tags: [Bookings]
      summary: Update a booking
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                consultationType: { type: string }
                scheduledDate: { type: string, format: date-time }
                durationMinutes: { type: integer }
                status:
                  type: string
                  enum: [scheduled, confirmed, in_progress, completed, cancelled, rescheduled]
                price: { type: number }
                meetingLink: { type: string }
                notes: { type: string }
                projectFiles:
                  type: array
                  items: { type: string }
            example:
              status: confirmed
              meetingLink: https://meet.example.com/xyz
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema: { $ref: '#/components/schemas/DesignerBooking' }
              example:
                id: bkg_1
                status: confirmed
                meetingLink: https://meet.example.com/xyz
        '401': { description: Unauthorized, content: { application/json: { schema: { $ref: '#/components/schemas/Error' } } } }
        '404': { description: Not found, content: { application/json: { schema: { $ref: '#/components/schemas/Error' } } } }
