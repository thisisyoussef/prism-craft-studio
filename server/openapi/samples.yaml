tags:
  - name: Samples
    description: Physical sample orders lifecycle
paths:
  /api/samples:
    post:
      tags: [Samples]
      summary: Create a sample order
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [products, totalPrice]
              properties:
                products:
                  type: array
                  items:
                    type: object
                    additionalProperties: true
                totalPrice: { type: number }
                status:
                  type: string
                  enum: [ordered, processing, shipped, delivered, converted_to_order]
                shippingAddress:
                  type: object
                  additionalProperties: true
                trackingNumber: { type: string }
            example:
              products:
                - productId: 66de5f6b3f3cc9b4c7f5a9a0
                  name: Classic Hoodie
                  color: navy
                  size: L
                  quantity: 1
              totalPrice: 25
              status: ordered
              shippingAddress:
                city: Dearborn
                state: MI
                country: US
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Sample' }
              example:
                id: smp_66de72ac9c1
                sampleNumber: SMPL-1725250000000
                products:
                  - productId: 66de5f6b3f3cc9b4c7f5a9a0
                    name: Classic Hoodie
                    color: navy
                    size: L
                    quantity: 1
                totalPrice: 25
                status: ordered
                shippingAddress:
                  city: Dearborn
                  state: MI
                  country: US
        '401': { description: Unauthorized, content: { application/json: { schema: { $ref: '#/components/schemas/Error' } } } }
    get:
      tags: [Samples]
      summary: List samples
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Samples
          content:
            application/json:
              schema:
                type: array
                items: { $ref: '#/components/schemas/Sample' }
              example:
                - id: smp_66de72ac9c1
                  sampleNumber: SMPL-1725250000000
                  totalPrice: 25
                  status: ordered
        '401': { description: Unauthorized, content: { application/json: { schema: { $ref: '#/components/schemas/Error' } } } }
  /api/samples/{id}:
    get:
      tags: [Samples]
      summary: Get a sample by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      responses:
        '200': { description: Sample, content: { application/json: { schema: { $ref: '#/components/schemas/Sample' } } } }
        '401': { description: Unauthorized, content: { application/json: { schema: { $ref: '#/components/schemas/Error' } } } }
        '404': { description: Not found, content: { application/json: { schema: { $ref: '#/components/schemas/Error' } } } }
    patch:
      tags: [Samples]
      summary: Update a sample
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema: { type: string }
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    type: object
                    additionalProperties: true
                totalPrice: { type: number }
                status:
                  type: string
                  enum: [ordered, processing, shipped, delivered, converted_to_order]
                shippingAddress:
                  type: object
                  additionalProperties: true
                trackingNumber: { type: string }
            example:
              status: shipped
              trackingNumber: 1Z999AA10123456784
      responses:
        '200':
          description: Updated
          content:
            application/json:
              schema: { $ref: '#/components/schemas/Sample' }
              example:
                id: smp_66de72ac9c1
                status: shipped
                trackingNumber: 1Z999AA10123456784
        '401': { description: Unauthorized, content: { application/json: { schema: { $ref: '#/components/schemas/Error' } } } }
        '404': { description: Not found, content: { application/json: { schema: { $ref: '#/components/schemas/Error' } } } }
